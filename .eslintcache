[{"/home/mabroordev/proj/active/tailwind-test/src/App.tsx":"1","/home/mabroordev/proj/active/tailwind-test/src/index.tsx":"2","/home/mabroordev/proj/active/tailwind-test/src/components/MenuItem.tsx":"3","/home/mabroordev/proj/active/tailwind-test/src/components/RightSideContent.tsx":"4","/home/mabroordev/proj/active/tailwind-test/src/components/SearchSect.tsx":"5","/home/mabroordev/proj/active/tailwind-test/src/components/DiscoverSect.tsx":"6"},{"size":1895,"mtime":1611254790562,"results":"7","hashOfConfig":"8"},{"size":219,"mtime":1610895312446,"results":"9","hashOfConfig":"8"},{"size":753,"mtime":1611252648713,"results":"10","hashOfConfig":"8"},{"size":1059,"mtime":1611256717044,"results":"11","hashOfConfig":"8"},{"size":2035,"mtime":1611255808084,"results":"12","hashOfConfig":"8"},{"size":1369,"mtime":1611255044269,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8r0o5s",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"/home/mabroordev/proj/active/tailwind-test/src/App.tsx",[],"/home/mabroordev/proj/active/tailwind-test/src/index.tsx",[],["30","31"],"/home/mabroordev/proj/active/tailwind-test/src/components/MenuItem.tsx",[],["32","33"],"/home/mabroordev/proj/active/tailwind-test/src/components/RightSideContent.tsx",[],"/home/mabroordev/proj/active/tailwind-test/src/components/SearchSect.tsx",["34","35"],"import search from \"../assets/search.svg\";\nimport notify from \"../assets/notify.svg\";\n\nexport interface Props {}\n\nexport const SearchSect: React.FC<Props> = ({}) => {\n  const Styles = {\n    SearchSect: \"h-auto sm:h-20 w-full flex flex-col sm:flex-row items-center\",\n    SearchBar:\n    \"w-full sm:w-2/6 h-11 transition-all sm:hover:w-3/6 rounded-xl bg-gray-800 ml-auto flex items-center\",\n    SearchBtn:\n      \"h-full flex justify-center text-white items-center w-12 ml-auto border-0 focus:outline-none\",\n    SearchIcon: \"w-4 text-white\",\n    SearchInput:\n      \"bg-transparent placeholder-gray-600 outline-none font-sans text-sm text-white ml-4 w-11/12\",\n    UserPart: \"my-5 sm:my-0 h-11 w-full sm:w-52 ml-auto flex\",\n    UserData: \"w-9/12 h-full flex items-center\",\n    UserImage: \"w-11 h-full rounded-full bg-gray-200\",\n    UserName: \"ml-3 text-gray-200\",\n    Notification:\n      \"w-3/12 h-full cursor-pointer flex justify-center items-center relative\",\n    Bell: \"text-white h-1/2 sm:h-auto sm:w-6/12\",\n    AlertDot: \"absolute top-1 right-6 sm:right-3 w-3 h-3 rounded-full bg-red-500\",\n  };\n\n  return (\n    <div>\n      <div className={Styles.SearchSect}>\n        <div className={Styles.SearchBar}>\n          <input\n            className={Styles.SearchInput}\n            placeholder=\"Search\"\n            type=\"text\"\n          />\n          <button className={Styles.SearchBtn}>\n            <img alt=\"SearchIcon\" className={Styles.SearchIcon} src={search} />\n          </button>\n        </div>\n        <div className={Styles.UserPart}>\n          <div className={Styles.UserData}>\n            <img\n              className={Styles.UserImage}\n              alt=\"User Image\"\n              src=\"Mabroor.png\"\n            />\n            <div className={Styles.UserName}>Mabroor</div>\n          </div>\n          <div className={Styles.Notification}>\n            <img className={Styles.Bell} alt=\"notifications\" src={notify} />\n            <div className={Styles.AlertDot}></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/home/mabroordev/proj/active/tailwind-test/src/components/DiscoverSect.tsx",["36"],"export interface Props {}\n\nexport const DiscoverSect: React.FC<Props> = ({}) => {\n  const Styles = {\n    DiscoverSect: \"h-3/6 w-full flex flex-col\",\n    DiscoverHeading: \"text-white font-black text-2xl h-1/12\",\n    DiscoverBoxContent: \"h-5/6 w-full mt-3 flex\",\n    DiscoverCard1:\n      \"transform transition-all hover:scale-105 bg-center h-full w-8/12 overflow-hidden bg-blue-400 cursor-pointer bg-cover rounded-2xl\",\n    Card1Overlay: \"w-full h-full p-5 sm:p-10\",\n    Card1text: \"w-56 font-bold text-white text-2xl\",\n    DiscoverCard2:\n      \"transform transition-all hover:scale-105 h-full w-4/12 cursor-pointer bg-yellow-600 bg-cover bg-center rounded-2xl ml-5\",\n  };\n\n  return (\n    <>\n      <div className={Styles.DiscoverSect}>\n        <h2 className={Styles.DiscoverHeading}>Discover</h2>\n        <div className={Styles.DiscoverBoxContent}>\n          <div\n            className={Styles.DiscoverCard1}\n            style={{ backgroundImage: \"url(skateboy.jpg)\" }}\n          >\n            <div className={Styles.Card1Overlay}>\n              <div className={Styles.Card1text}>\n                How to do jumping and land safely\n              </div>\n            </div>\n          </div>\n          <div\n            className={Styles.DiscoverCard2}\n            style={{ backgroundImage: \"url(card2pic.png)\" }}\n          ></div>\n        </div>\n      </div>\n    </>\n  );\n};\n",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"37","replacedBy":"41"},{"ruleId":"39","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":6,"column":45,"nodeType":"45","messageId":"46","endLine":6,"endColumn":47},{"ruleId":"47","severity":1,"message":"48","line":41,"column":13,"nodeType":"49","endLine":45,"endColumn":15},{"ruleId":"43","severity":1,"message":"44","line":3,"column":47,"nodeType":"45","messageId":"46","endLine":3,"endColumn":49},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],["50"],["51"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]